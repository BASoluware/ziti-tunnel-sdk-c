name: CI build

on:
  push:
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: make build dir
        run: cmake -E make_directory ${{runner.workspace}}/build
      - name: configure cmake
        if: matrix.os != 'windows-latest'
        run: cmake -S ${{ github.workspace }} -B ${{runner.workspace}}/build
      - name: configure cmake (WIN)
        if: matrix.os == 'windows-latest'
        run: cmake -S ${{ github.workspace }} -B ${{runner.workspace}}/build -G "MinGW Makefiles"
      - name: build
        run: cmake --build ${{runner.workspace}}/build --target bundle
      - uses: actions/upload-artifact@v2
        if: matrix.os != 'windows-latest'
        with:
          name: ${{ matrix.os }}
          path: ${{ runner.workspace }}/build/bundle/*.zip

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - name: download
        uses: actions/download-artifact@v2
        with:
          path: downloads/
      - name: show artifacts
        run: ls -lR

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
      - name: echo
        run: echo ${{ steps.create_release.outputs.upload_url }}
      - name: upload Linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{runner.workspace}}/downloads/ubuntu-latest/ziti-edge-tunnel-Linux_x86_64.zip
          asset_name: ziti-edge-tunnel-Linux_x86_64.zip
          asset_content_type: application/octet-stream
      - name: upload MacOS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{runner.workspace}}/downloads/macOS-latest/ziti-edge-tunnel-Darwin_x86_64.zip
          asset_name: ziti-edge-tunnel-Darwin_x86_64.zip
          asset_content_type: application/octet-stream